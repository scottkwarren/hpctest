diff -ur spack-src.org/src/mtl_headers/mtl/linalg_vec.h spack-src/src/mtl_headers/mtl/linalg_vec.h
--- spack-src.org/src/mtl_headers/mtl/linalg_vec.h	2019-12-25 13:38:14.191695748 +0900
+++ spack-src/src/mtl_headers/mtl/linalg_vec.h	2019-12-25 13:39:08.887447770 +0900
@@ -116,6 +116,7 @@
   typedef difference_type Vec_difference_type;
   typedef iterator Vec_iterator;
   typedef const_iterator Vec_const_iterator;
+  typedef value_type Vec_value_type;
 
   class IndexArray {
   public:
diff -ur spack-src.org/src/utils/toolbox/database/HDFDatabase.cc spack-src/src/utils/toolbox/database/HDFDatabase.cc
--- spack-src.org/src/utils/toolbox/database/HDFDatabase.cc	2019-12-25 13:38:14.201696799 +0900
+++ spack-src/src/utils/toolbox/database/HDFDatabase.cc	2019-12-25 14:50:42.627965265 +0900
@@ -686,7 +686,7 @@
    herr_t errf;
    if (nelements > 0) {
 
-      hsize_t dim[] = {nelements};
+      hsize_t dim[] = {(unsigned long long)nelements};
       hid_t space = H5Screate_simple(1, dim, NULL);
 #ifdef ASSERT_HDF5_RETURN_VALUES
       assert( space >= 0 );
@@ -1233,7 +1233,7 @@
    herr_t errf;
    if (nelements > 0) {
 
-      hsize_t dim[] = {nelements};
+      hsize_t dim[] = {(unsigned long long)nelements};
       hid_t space = H5Screate_simple(1, dim, NULL);
 #ifdef ASSERT_HDF5_RETURN_VALUES
       assert( space >= 0 );
@@ -1478,7 +1478,7 @@
    herr_t errf;
    if (nelements > 0) {
 
-      hsize_t dim[] = {nelements};
+      hsize_t dim[] = {(unsigned long long)nelements};
       hid_t space = H5Screate_simple(1, dim, NULL);
 #ifdef ASSERT_HDF5_RETURN_VALUES
       assert( space >= 0 );
@@ -1722,7 +1722,7 @@
    herr_t errf;
    if (nelements > 0) {
 
-      hsize_t dim[] = {nelements};
+      hsize_t dim[] = {(unsigned long long)nelements};
       hid_t space = H5Screate_simple(1, dim, NULL);
 #ifdef ASSERT_HDF5_RETURN_VALUES
       assert(space >= 0);
@@ -1998,7 +1998,7 @@
       assert( errf >= 0 );
 #endif
 
-      hsize_t dim[] = {nelements};
+      hsize_t dim[] = {(unsigned long long)nelements};
       hid_t space = H5Screate_simple(1, dim, NULL);
 #ifdef ASSERT_HDF5_RETURN_VALUES
       assert( space >= 0 );
