From: Xavier Leroy <xavier.leroy@college-de-france.fr>
Date: Thu, 12 Dec 2019 16:41:17 +0100
Subject: Avoid duplicate definitions of "common" global variables

The variables are caml_debug_info and caml_atom_table.
The multiple definitions look like a cut-and-paste error.
They cause problems with C compilers that don't follow the "common" model.

Bug: https://github.com/ocaml/ocaml/issues/9144
Bug-Debian: https://bugs.debian.org/957623
---
 runtime/backtrace.c   | 3 ---
 runtime/startup_nat.c | 1 -
 2 files changed, 4 deletions(-)

diff --git a/runtime/backtrace.c b/runtime/backtrace.c
index a3c2c08..ddf7af1 100644
--- a/runtime/backtrace.c
+++ b/runtime/backtrace.c
@@ -27,9 +27,6 @@
 #include "caml/backtrace_prim.h"
 #include "caml/fail.h"
 
-/* The table of debug information fragments */
-struct ext_table caml_debug_info;
-
 CAMLexport int32_t caml_backtrace_active = 0;
 CAMLexport int32_t caml_backtrace_pos = 0;
 CAMLexport backtrace_slot * caml_backtrace_buffer = NULL;
diff --git a/runtime/startup_nat.c b/runtime/startup_nat.c
index 43b85e3..5b20036 100644
--- a/runtime/startup_nat.c
+++ b/runtime/startup_nat.c
@@ -44,7 +44,6 @@
 #endif
 
 extern int caml_parser_trace;
-CAMLexport header_t caml_atom_table[256];
 char * caml_code_area_start, * caml_code_area_end;
 struct ext_table caml_code_fragments_table;
 
