diff --git a/src/main/cpp/blaze_util_posix.cc b/src/main/cpp/blaze_util_posix.cc
index 87ba899180..1c967ee818 100644
--- a/src/main/cpp/blaze_util_posix.cc
+++ b/src/main/cpp/blaze_util_posix.cc
@@ -565,7 +565,8 @@ static int setlk(int fd, struct flock *lock) {
   // Prefer OFD locks if available.  POSIX locks can be lost "accidentally"
   // due to any close() on the lock file, and are not reliably preserved
   // across execve() on Linux, which we need for --batch mode.
-  if (fcntl(fd, F_OFD_SETLK, lock) == 0) return 0;
+  //if (fcntl(fd, F_OFD_SETLK, lock) == 0) return 0;
+  if (fcntl(fd, F_SETLK, lock) == 0) return 0;
   if (errno != EINVAL) {
     if (errno != EACCES && errno != EAGAIN) {
       BAZEL_DIE(blaze_exit_code::LOCAL_ENVIRONMENTAL_ERROR)
diff --git a/tools/cpp/unix_cc_configure.bzl b/tools/cpp/unix_cc_configure.bzl
index ccb18a431a..0c5c8fd6f0 100644
--- a/tools/cpp/unix_cc_configure.bzl
+++ b/tools/cpp/unix_cc_configure.bzl
@@ -379,7 +379,8 @@ def configure_unix_toolchain(repository_ctx, cpu_value, overriden_tools):
         "",
         False,
     ), ":")
-    gold_linker_path = _find_gold_linker_path(repository_ctx, cc)
+    #gold_linker_path = _find_gold_linker_path(repository_ctx, cc)
+    gold_linker_path = None
     cc_path = repository_ctx.path(cc)
     if not str(cc_path).startswith(str(repository_ctx.path(".")) + "/"):
         # cc is outside the repository, set -B
@@ -468,7 +469,7 @@ def configure_unix_toolchain(repository_ctx, cpu_value, overriden_tools):
                     # Security hardening requires optimization.
                     # We need to undef it as some distributions now have it enabled by default.
                     "-U_FORTIFY_SOURCE",
-                    "-fstack-protector",
+                    #"-fstack-protector",
                     # All warnings are enabled. Maybe enable -Werror as well?
                     "-Wall",
                     # Enable a few more warnings that aren't part of -Wall.
